Faq.searchReabilityAnswer=SELECT f.active, f.id, f.answer, f.hint, f.keywords, MATCH (f.keywords, f.answer) AGAINST (:question) AS score, @max_score\\:=GREATEST(MATCH (f.keywords, f.answer) AGAINST (:question), IFNULL(@max_score, 0)) AS maxim FROM Faq AS f WHERE MATCH (f.keywords, f.answer) AGAINST (:question) > :DB_REQ_SCORE and f.active = 'Y' HAVING score > :DB_REQ_HINT * IFNULL(@max_score, 0) LIMIT 3
 
Command.getAllActiveCommand=from Command where isInMaintenance = 'N'

Event.searchByCurrentDate=from Event where owner = :idUser and step > 0 and step < 3 and DATE(insertDate) = current_date()

Event.searchCurrentEvents=from Event where startDate > current_date() and step = 3 and cancelled = 'N'

Event.searchMyOldEvents=from Event where owner = :idUser and startDate < current_date() order by insertDate desc
Event.searchMyConfirmedEvents=from Event where owner = :idUser and startDate  > current_date() and step = 3 order by insertDate desc
Event.searchMyUncompleteEvents=from Event where owner = :idUser and startDate  > current_date() and step < 3 and step > 1 and step < 4 order by insertDate desc

Partecipant.checkUserExist =from Partecipant where idEvent = :idEvento and idUser = :idUser";